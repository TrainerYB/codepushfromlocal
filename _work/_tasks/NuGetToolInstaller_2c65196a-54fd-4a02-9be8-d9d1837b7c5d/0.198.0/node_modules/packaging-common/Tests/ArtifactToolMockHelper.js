"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function registerArtifactToolUtilitiesMock(tmr, toolPath) {
    tmr.registerMock('packaging-common/universal/ArtifactToolUtilities', {
        getArtifactToolFromService: function (serviceUri, accessToken, toolName) {
            return toolPath;
        },
        getPackageNameFromId: function (serviceUri, accessToken, projectId, feedId, packageId) {
            return packageId;
        }
    });
}
exports.registerArtifactToolUtilitiesMock = registerArtifactToolUtilitiesMock;
function registerArtifactToolRunnerMock(tmr) {
    var mtt = require('azure-pipelines-task-lib/mock-toolrunner');
    tmr.registerMock('packaging-common/universal/ArtifactToolRunner', {
        getOptions: function () {
            return {
                cwd: process.cwd(),
                env: Object.assign({}, process.env),
                silent: false,
                failOnStdErr: false,
                ignoreReturnCode: false,
                windowsVerbatimArguments: false
            };
        },
        runArtifactTool: function (artifactToolPath, command, execOptions) {
            var tr = new mtt.ToolRunner(artifactToolPath);
            tr.arg(command);
            return tr.execSync(execOptions);
        }
    });
}
exports.registerArtifactToolRunnerMock = registerArtifactToolRunnerMock;
